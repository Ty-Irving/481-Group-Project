
<div class="buttons">
    <button class="ingListBut" style="@ingColor" @onclick="ing">Ingredients (@ClubMember.Count/@RecipeObj.IngredientList.Length)</button>
    <button class="stepListBut" style="@stepColor" @onclick="step">Directions</button>
   
</div>


@if (show == 0)
{
    <div class="ingList">
        @foreach (string x in ClubList())
        {
            <input type="checkbox" @onchange="eventArgs => { CheckboxClicked(x, eventArgs.Value); }" /><!---id="Ingridient1" name="Ingridient1" value="XXXX">-->
            string[] subs = x.Split(' ');
            <label>@RecipeObj.IngredientList[Int16.Parse(subs[1])].toString()  </label>
            <br />   
        }

    </div>
}

@if (show == 1)
{
    <div class="stepList ">

        @for (int i = 0; i < RecipeObj.Steps.Length; i++)
        {
            <!---id="Instruction" name="Instruction" value="XXXX"-->
            <Teststar Value=@RecipeObj.Steps[i] important=@checkImportance(RecipeObj.stepImages[i]) image=@RecipeObj.stepImages[i]></Teststar>

        }

    </div>
}


@code {
    [Parameter]
    public CookingInstructor.RecipeNS.Recipe? RecipeObj { get; set; }

    public EventCallback<ChangeEventArgs> ValueChanged { get; set; }
    private int show = 0;
    private string ingColor = "background-color:blue; color: white;";
    private string stepColor = "background-color: #e7e7e7; color: black;";
    private string color1 = "background-color:blue; color: white;";
    private string color2 = "background-color: #e7e7e7; color: black;";


    int incheck_num;
    bool[] ingMember;

    protected override void OnInitialized()
    {
        ingMember = new bool[RecipeObj.IngredientList.Length];
        incheck_num = 0;
    }

    public bool checkImportance(string x)
    {
        return x != "";
    }

    private void ing()
    {
        show = 0;
        ingColor = color1;
        stepColor = color2;

    }

    public List<string> ClubMember { get; set; } = new List<string>();
    void CheckboxClicked(string clubID, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            if (!ClubMember.Contains(clubID))
            {
                ClubMember.Add(clubID);
            }
        }
        else
        {
            if (ClubMember.Contains(clubID))
            {
                ClubMember.Remove(clubID);
            }
        }
    }

    public List<String> ClubList()
    {
        List<String> c = new List<String>();
        for (int i = 0; i < RecipeObj.IngredientList.Length; i++)
        {
            c.Add("club "+i);
            Console.WriteLine(c[i]);
        }
        return c;
    }

    private void step()
    {
        show = 1;
        ingColor = color2;
        stepColor = color1;
    }
}
