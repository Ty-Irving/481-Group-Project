@page "/"
@inject SearchMode SearchMode

<style>
    body{
    background-image: url("/App/cooking_bg.jpg");
    }
</style>

<PageTitle>Index</PageTitle>
    <div class="px-4 py-5 my-5 text-center" style="background-color: white; border-radius:5%;">
        <h1 class="text-center">Feeling Hungry?</h1>

        <div class="d-grid gap-3">
            <SearchModeButtons />

            <Searchbar 
                searchMode="@SearchMode.state"
            />
        </div>

        @if (SearchMode.state == SearchModeEnum.ByIngredient) {
            <SearchIngredientsDisplay />
        }
    </div>


@code {
    public static CookingInstructor.RecipeNS.Recipe[]? staticlist = new CookingInstructor.Data.Recipes().GetRecipes();

    protected override void OnInitialized()
    {
        SearchMode.OnChange += UpdateState;
    }

    public void Dispose()
    {
        SearchMode.OnChange -= UpdateState;
    }

    private async void UpdateState(object sender, EventArgs e)
    {
        // InvokeAsync is inherited, it syncs the call back to the render thread
        await InvokeAsync(() => 
        {
            StateHasChanged();
        });
    }
}



