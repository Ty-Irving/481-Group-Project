@page "/searchpage"
@using Microsoft.AspNetCore.WebUtilities
@inject NavigationManager NavManager

<PageTitle>Searches</PageTitle>

<body>

    <Searchbar 
            searchMode="SearchModeEnum.ByRecipe"
    />


    <div class="recipeContainer">
        @for (int i = 0; i < list.Length; i++)
        {
            if (list[i].Name.ToUpper().Contains(_name.ToUpper()))
            {
                current = list[i];
                diff = (current.Difficulty == 1) ? "Easy" : (current.Difficulty == 2) ? "Medium" : "Hard";
                <RecipeImageHorizontal 
                    Index =@i
                    Image =@current.imagePath
                    Difficulty =@current.Difficulty
                    SpicyLevel =@current.Spicy
                    Calories =@current.CaloriesPerServing
                    Name =@current.Name
                    Time =@current.Time/>

            }
        }

    </div>

    <div class="ingredientContainer">
        @for (int i = 0; i < list.Length; i++)
        {
            int count = 0;
            @for (int j = 0; j < list[i].IngredientList.Length; j++)
            {
                if (list[i].IngredientList[j].Name.ToUpper() == _name.ToUpper())
                {
                    count += 1;
                    current = list[i];
                }
            }
            // add to a dict, (searchedIngredient1, count)
            // add to another dict the (recipe that had at least 1 matching searched Ingredient, and its count of ingredients matched) to then show in order of relevance.
        }

    </div>
</body>

@code{
    private string? _name;
    public CookingInstructor.RecipeNS.Recipe[]? list = Index.staticlist;
    private CookingInstructor.RecipeNS.Recipe? current;
    private string diff;

    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        var queryStrings = QueryHelpers.ParseQuery(uri.Query);
        if (queryStrings.TryGetValue("name", out var name))
        {
            _name = name;

        }
        Data.Recipes myClass = new Data.Recipes();
    }

}