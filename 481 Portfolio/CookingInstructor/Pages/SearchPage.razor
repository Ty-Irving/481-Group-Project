@page "/searchpage"
@using Microsoft.AspNetCore.WebUtilities
@using System
@using System.Linq
@using System.Collections.Generic;
@inject NavigationManager NavManager

<PageTitle>Searches</PageTitle>

<body>

    <Searchbar 
            searchMode="SearchModeEnum.ByRecipe"
    />


    <div class="recipeContainer">
        @for (int i = 0; i < list.Length; i++)
        {
            if (list[i].Name.ToUpper().Contains(_name.ToUpper()))
            {
                current = list[i];
                diff = (current.Difficulty == 1) ? "Easy" : (current.Difficulty == 2) ? "Medium" : "Hard";
                <RecipeImageHorizontal 
                    Index =@i
                    Image =@current.imagePath
                    Difficulty =@current.Difficulty
                    SpicyLevel =@current.Spicy
                    Calories =@current.CaloriesPerServing
                    Name =@current.Name
                    Time =@current.Time/>

            }
        }
    </div>

    <div class="ingredientContainer">
        @for (int i = 0; i < list.Length; i++)
        {
            int count = 0;
            string[] ingredients = _name.Split(',');
            string[] recipeIngrList = new string[list[i].IngredientList.Length];
            
            @for (int k = 0; k < list[i].IngredientList.Length; k++)
            {
                recipeIngrList[k] = list[i].IngredientList[k].Name;
            }

            @for (int j = 0; j < ingredients.Length; j++)
            {
                if (recipeIngrList.Contains(ingredients[j], StringComparer.OrdinalIgnoreCase))
                {
                    count += 1;
                    matchedRecipes[list[i]] = count;
                }
            }
        }

        @foreach(KeyValuePair<CookingInstructor.RecipeNS.Recipe?, int> entry in matchedRecipes.OrderByDescending(key => key.Value))
        {
            current = entry.Key;
            Console.WriteLine(entry.Key.Name + ": " + entry.Value);
            <RecipeImageHorizontal 
                Image =@current.imagePath
                Difficulty =@current.Difficulty
                SpicyLevel =@current.Spicy
                Calories =@current.CaloriesPerServing
                Name =@current.Name
                Time =@current.Time/>
        }
    </div>
    
</body>

@code{
    // TODO: Show recipe container if ByRecipe, show ingr container if ByIngredient
    [Parameter]
    public SearchModeEnum searchMode { get; set; }
    private string? _name;
    public CookingInstructor.RecipeNS.Recipe[]? list = Index.staticlist;
    private CookingInstructor.RecipeNS.Recipe? current;
    private string diff;
    private Dictionary<CookingInstructor.RecipeNS.Recipe?, int> matchedRecipes = new Dictionary<CookingInstructor.RecipeNS.Recipe?, int>();

    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        var queryStrings = QueryHelpers.ParseQuery(uri.Query);
        if (queryStrings.TryGetValue("name", out var name))
        {
            _name = name;
        }
        Data.Recipes myClass = new Data.Recipes();
    }
}