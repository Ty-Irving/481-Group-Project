<div>
    <label for="yourIngredients">Your Ingredients</label>
    <div 
        class="ingredient-box d-flex align-content-center flex-wrap justify-content-center"
        id="yourIngredients"
        style="min-height: 40px; max-height: 90px; overflow-y: auto; border: gray; border-width: 1px; border-radius: 16px; border-style: solid;">
            @foreach (var name in yourIngredients) {
                <IngredientEntry 
                    name="@name"
                    addRemove="IngredientEntryMode.Remove"
                    OnClickIngredient="handleIngredientMove"
                />
            }
    </div>

    <label for="commonIngredients">Common Ingredients</label>
    <div 
        class="ingredient-box d-flex align-content-center flex-wrap justify-content-center"
        id="commonIngredients"
        style="min-height: 40px; max-height: 90px; overflow-y: auto; border: gray; border-width: 1px; border-radius: 16px; border-style: solid;">
            @foreach (var name in visibleCommonIngredients) {
                <IngredientEntry 
                    name="@name"
                    addRemove="IngredientEntryMode.Add"
                    OnClickIngredient="handleIngredientMove"
                />
            }
    </div>
</div>

@code {
    public List<String> yourIngredients {get; set;} = new List<String> {"Tomato", "Chicken"};

    public List<String> visibleCommonIngredients {get; set;} = new List<String> {"Garlic", "Onion"};

    private CommonIngredients commonIngredients = new CommonIngredients();

    public void handleIngredientMove(IngredientEntryData ingredient) {
        if (ingredient.mode == IngredientEntryMode.Add) {
            Console.WriteLine("Add " + ingredient.name);
            visibleCommonIngredients.Remove(ingredient.name);
            yourIngredients.Add(ingredient.name);
        }
        else { // Remove
            Console.WriteLine("Remove " + ingredient.name);
            yourIngredients.Remove(ingredient.name);
            if (commonIngredients.Contains(ingredient.name)) {
                visibleCommonIngredients.Add(ingredient.name);
            }
        }
    }
}