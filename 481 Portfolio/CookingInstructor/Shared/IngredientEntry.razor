<a 
    type="button" 
    class="btn"
    @onclick="onIngredientClicked">
        <div
            class="px-1"
            style="border: black; border-width: 1px; border-radius: 16px; border-style: solid;">
                <span>@data.name</span>
                <span>
                    @if (@data.mode == IngredientEntryMode.Add) {
                        // https://icons.getbootstrap.com/icons/plus-circle/
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                        </svg>
                    }
                    else { // Remove
                        // https://icons.getbootstrap.com/icons/x-circle/
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x-circle" viewBox="0 0 16 16">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                            <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z"/>
                        </svg>
                    }
                </span>
        </div>
</a>

@code { 
    [Parameter] 
    public IngredientEntryData data { get; set; } = new IngredientEntryData("", IngredientEntryMode.Remove);

    [Parameter]
    public EventCallback<IngredientEntryData> OnClickIngredient { get; set; }

    public async Task onIngredientClicked() {
        await OnClickIngredient.InvokeAsync(data);
    }
}
